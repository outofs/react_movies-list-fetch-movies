{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","query","onChangeInput","onSubmit","loading","isError","setIsError","onAddMovie","_Fragment","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setQuery","_useState5","_useState6","setMovie","_useState7","_useState8","setLoading","_useState9","_useState10","queryString","fetch","concat","then","res","json","catch","Response","Error","getMovie","toLowerCase","data","properPoster","Poster","Title","Plot","imdbID","finally","some","currentMovie","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b21b6a7f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  query: string;\n  onChangeInput: (str: string) => void;\n  onSubmit: (str: string) => void;\n  loading: boolean;\n  movie: Movie | null;\n  isError: boolean;\n  setIsError: (val: boolean) => void;\n  onAddMovie: () => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  onChangeInput,\n  onSubmit,\n  movie,\n  loading,\n  isError,\n  setIsError,\n  onAddMovie,\n}) => {\n  const onChangeHandler\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeInput(event.target.value);\n      setIsError(false);\n    };\n\n  const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onSubmitHandler}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames('input', {\n                  'is-danger': isError,\n                })\n              }\n              value={query}\n              onChange={onChangeHandler}\n            />\n          </div>\n\n          {\n            isError\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                {\n                  'is-loading': loading,\n                })}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {\n            movie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={onAddMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {\n        movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const onSubmit = (queryString: string) => {\n    setLoading(true);\n\n    getMovie(queryString.toLowerCase())\n      .then((data: MovieData | ResponseError) => {\n        if ('Title' in data) {\n          const properPoster = data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster;\n\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: properPoster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        } else {\n          setIsError(true);\n        }\n      }).finally(() => setLoading(false));\n  };\n\n  const onAddMovie = () => {\n    if (movie) {\n      const movieIsUnique = !movies.some(\n        currentMovie => currentMovie.imdbId === movie?.imdbId,\n      );\n\n      if (movieIsUnique) {\n        setMovies(prevMovies => [...prevMovies, movie]);\n      }\n\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          onChangeInput={setQuery}\n          onSubmit={onSubmit}\n          loading={loading}\n          movie={movie}\n          isError={isError}\n          setIsError={setIsError}\n          onAddMovie={onAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8ac25516';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}